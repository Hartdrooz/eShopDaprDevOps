#cloud-config
package_upgrade: true
packages:
  - curl
  - git
  - install
  - ca-certificates
  - gnupg
  - lsb-release
  - jq
  - nodejs
runcmd:
  # Installing kubectl
  - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
  - sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
  - chmod +x kubectl
  - mkdir -p ~/.local/bin/kubectl
  - mv ./kubectl ~/.local/bin/kubectl

  # Installing azure cli
  - curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

  # Installing helm
  - curl https://baltocdn.com/helm/signing.asc | sudo apt-key add -
  - sudo apt-get install apt-transport-https --yes
  - echo "deb https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
  - sudo apt-get update
  - sudo apt-get install helm

  # Installing docker
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
  - echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  - sudo apt-get update
  - sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose --yes
  - sudo systemctl enable docker.service
  - sudo systemctl enable containerd.service
  # Creating new group docker
  - sudo groupadd docker
  # Adding current user to the docker group (avoiding the user to run the sudo command when calling docker)
  - sudo usermod -aG docker $USER
  # Apply change of the docker group on the linux box
  # https://docs.docker.com/engine/install/linux-postinstall/
  - newgrp docker

  # Adding current user (defined when creating the VM to the sudo group)
  # https://linuxize.com/post/how-to-add-user-to-sudoers-in-ubuntu/
  - echo "${USER}  ALL=(ALL) NOPASSWD:ALL" | sudo tee "/etc/sudoers.d/${USER}"