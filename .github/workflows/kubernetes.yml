name: Configure Kubernetes

on:
  workflow_dispatch:

env:
  RESOURCE_GROUP_NAME: rg-aks-devsecops
  NAMESPACE: eshopondapr

jobs:
  
  configure-acr:
    runs-on: self-hosted

    steps:

      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Attach ACR
        run: |
          var=${{ secrets.AKS_NAME }}
          replace=""
          acrname=${var//.azurecr.io/$replace}
          echo $acrname
          az aks update -n ${{ secrets.AKS_NAME }} -g ${{ env.RESOURCE_GROUP_NAME }} --attach-acr $acrname

  create-namespace-eshop:
    runs-on: self-hosted
    needs: configure-acr

    steps:      
      - uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: ${{ secrets.AKS_NAME }}
          resource-group: ${{ env.RESOURCE_GROUP_NAME }}  

      # Create namespace if doesn't exist
      - name: Create K8s Namespace
        run: |
          kubectl create namespace ${{ env.NAMESPACE }} --dry-run=client -o json | kubectl apply -f -

      - name: Install Dapr
        run: |
          # Validate if Dapr is already installed
          daprInstalled=$(kubectl get ns | grep dapr-system)
          if [ -z "$daprInstalled" ]
          then
            dapr init -k --enable-ha=true --wait --timeout 600
          fi

  # Deploy database, service bus etc.
  deploy-core-services:
    runs-on: self-hosted
    needs: create-namespace-eshop

    steps:

    - name: Checkout repo
      uses: actions/checkout@v2

    # Set the target Azure Kubernetes Service (AKS) cluster. 
    - uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ secrets.AKS_NAME }}
        resource-group: ${{ env.RESOURCE_GROUP_NAME }}

    - name: Build Kustomize template
      run: |        
        kubectl apply -k deploy/k8s/kustomize/core/base --dry-run=client -oyaml > deploy/k8s/kustomize/core/base/core.yml

    # Continue on error, this is for demo purpose
    - name: Check configuration files for security issues with Snyk
      continue-on-error: true
      uses: snyk/actions/iac@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        file: deploy/k8s/kustomize/core/base/core.yml

    - name: Upload result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: snyk.sarif      
    
    - name: Deploy Core Service in Kubernetes
      run: |
        kubectl apply -f deploy/k8s/kustomize/core/base/core.yml
        

        